name: deploy resource

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: install bash_unit
      run: bash <(curl -s https://raw.githubusercontent.com/pgrange/bash_unit/master/install.sh)
    - name: run tests
      run: ./bash_unit tests/*
      
  build-release:
    needs: test
    runs-on: ubuntu-latest
    # should only run on push events
    if: github.event_name == 'push'
    steps:
    - name: checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
    - name: git version
      id: version
      uses: codacy/git-version@2.7.1
      with:
        release-branch: main
    - name: echo version
      run: |
        echo ${{ steps.version.outputs.version }}
    - name: set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: login to docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: build and push docker image
      uses: docker/build-push-action@v5
      with:
        push: true
        tags:  |
          ${{ secrets.DOCKERHUB_USERNAME }}/authorize-job-resource:${{ steps.version.outputs.version }}
          ${{ secrets.DOCKERHUB_USERNAME }}/authorize-job-resource:latest
    - name: tag release
      # https://github.com/marketplace/actions/create-update-tag
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ steps.version.outputs.version }}
        message: "Releasing version ${{ steps.version.outputs.version }}"
    - name: create release
      uses: elgohr/Github-Release-Action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        title: ${{ steps.version.outputs.version }}
        
